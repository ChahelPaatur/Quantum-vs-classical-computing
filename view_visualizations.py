"""
Quantum vs Classical Computing Benchmark Visualizations Viewer

This script displays the visualizations generated by the benchmark comparing 
quantum, classical, and hybrid computing approaches.
"""

import matplotlib.pyplot as plt
import pandas as pd
import os
from PIL import Image

def display_visualizations():
    """Display all visualizations in a window"""
    
    visualization_dir = "visualization_results"
    
    if not os.path.exists(visualization_dir):
        print(f"Error: Visualization directory '{visualization_dir}' not found.")
        print("Please run 'python enhanced_visualization_test.py' first.")
        return
    
    # Load the model comparison data
    model_data = pd.read_csv(f"{visualization_dir}/model_comparison.csv")
    print("\n===== MODEL COMPARISON TABLE =====")
    print(model_data.to_string(index=False))
    print("\n")
    
    # List of visualizations to display
    visualizations = [
        ("Model Accuracy Comparison", "accuracy_comparison.png"),
        ("Training and Inference Time", "time_comparison.png"),
        ("Resource Usage (Memory/CPU)", "resource_usage.png"),
        ("Practicality Metrics", "practicality_comparison.png"),
        ("Multi-Dimensional Comparison", "radar_comparison.png")
    ]
    
    # Show information about available visualizations
    print("===== GENERATED VISUALIZATIONS =====")
    for i, (title, filename) in enumerate(visualizations, 1):
        filepath = f"{visualization_dir}/{filename}"
        if os.path.exists(filepath):
            img = Image.open(filepath)
            width, height = img.size
            print(f"{i}. {title} ({width}x{height})")
        else:
            print(f"{i}. {title} - FILE NOT FOUND")
    
    print("\nTo view these visualizations:")
    print("1. Open the 'visualization_results' directory")
    print("2. Double-click on any PNG file to open it in your image viewer")
    print("\nOr use matplotlib to display them in a Python environment")

if __name__ == "__main__":
    display_visualizations() 